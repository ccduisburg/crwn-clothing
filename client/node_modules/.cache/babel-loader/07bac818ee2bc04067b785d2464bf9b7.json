{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSucces, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSucces({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOut);\n  } catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated());\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* userSagas() {\n  yield;\n  all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSucces","signInFailure","signOutSuccess","signOutFailure","isUserAuthenticated","userAuth","getSnapshotFromUserAuth","error","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument,getCurrentUser } from '../../firebase/firebase.utils';\n\nimport { signInSucces, signInFailure ,signOutSuccess,signOutFailure} from './user.actions';\n\nexport function* isUserAuthenticated() {\ntry {\n    const userAuth=yield getCurrentUser();\n    if(!userAuth) return ;\n    yield getSnapshotFromUserAuth(userAuth)\n} catch (error) {\n    yield put(signInFailure(error));\n}\n}\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSucces({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOut(){\n    try {\n        yield auth.signOut();\n        yield (put(signOut))\n    } catch (error) {\n        \n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START)\n}\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START)\n}\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated())\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,)\n}\n\nexport function* userSagas() {\n    yield\n    all([call(onGoogleSignInStart), call(onEmailSignInStart),call(onCheckUserSession)])\n}\n"]},"metadata":{},"sourceType":"module"}