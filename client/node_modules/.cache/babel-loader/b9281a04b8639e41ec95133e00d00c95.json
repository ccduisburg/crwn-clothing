{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n      this.setState({\n        loading: false\n      });\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAC,OAAK;AACpCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADc,CAAL,CAA5B;AAIP,OAAO,MAAMC,uBAAuB,GAACC,cAAc,KAAG;AAClDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD4B;AAElDC,EAAAA,OAAO,EAAEF;AAFyC,CAAH,CAA5C;AAKP,OAAO,MAAMG,uBAAuB,GAACC,YAAY,KAAG;AAChDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD0B;AAEhDH,EAAAA,OAAO,EAAEE;AAFuC,CAAH,CAA1C;AAMP,OAAO,MAAME,0BAA0B,GAAC,MAAI;AAC5C,SAAOC,QAAQ,IAAE;AACb,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACEC,QAAQ,IAAI;AACV,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACF,WAAKa,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACC,KALH,EAKKC,KALL,CAKWC,KAAK,IAAET,QAAQ,CAACJ,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAL1B;AAMH,GATD;AAUC,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart=()=>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n    \n});\nexport const fetchCollectionsSuccess=collectionsMap=>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure=errorMessage=>({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n\n})\n\nexport const fetchCollectionsStartAsync=()=>{\nreturn dispatch=>{\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(\n      snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      this.setState({loading: false})\n      }).catch(error=>dispatch(fetchCollectionsFailure(error.message)))\n}\n}"]},"metadata":{},"sourceType":"module"}