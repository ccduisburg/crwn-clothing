{"ast":null,"code":"var _jsxFileName = \"/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/pages/shop/shop.components.jsx\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport ColllectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(ColllectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFormSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    }); // this.unsubscribeFormSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    // updateCollections(collectionsMap);\n    // this.setState({loading: false})\n    // })\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/pages/shop/shop.components.jsx"],"names":["React","Route","ColllectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFormSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,oBAAP,MAAiC,sEAAjC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAACD,WAAW,CAACN,oBAAD,CAAhD;AACA,MAAMQ,yBAAyB,GAACF,WAAW,CAACL,cAAD,CAA3C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACvCC,KADuC,GACjC;AACJC,MAAAA,OAAO,EAAE;AADL,KADiC;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACT,MAAAA;AAAD,QAAoB,KAAKU,KAA/B;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACEC,QAAQ,IAAI;AACV,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACFf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACC,KALH,EAJkB,CAYlB;AACA;AACA;AACA;AACA;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAACX,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EACvCV,KAAD,iBAAS,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAC/CV,KAAD,iBAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AASD;;AArCoC;;AAwCvC,MAAMW,kBAAkB,GAACC,QAAQ,KAAG;AACpCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAEM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADP,CAAH,CAAjC;;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAiCjB,QAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport ColllectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner=WithSpinner(ColllectionsOverview);\nconst CollectionPageWithSpinner=WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\nstate={\n  loading: true\n}\n\n  unsubscribeFormSnapshot = null;\n\n  componentDidMount() {\n    const {updateCollections}=this.props;\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.get().then(\n      snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      updateCollections(collectionsMap);\n      this.setState({loading: false})\n      });\n\n    \n    // this.unsubscribeFormSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    // updateCollections(collectionsMap);\n    // this.setState({loading: false})\n    // })\n  }\n  render() {\n    const {loading}=this.state;\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} render={\n          (props)=><CollectionsOverviewWithSpinner isLoading={loading} {...props}/>} />\n        <Route path={`${match.path}/:collectionId`} render={\n          (props)=><CollectionPageWithSpinner isLoading={loading} {...props}/> }/>\n      </div>\n\n    )\n  }\n}\n\nconst mapDispatchToProps=dispatch=>({\nupdateCollections: collectionsMap=>dispatch(updateCollections(collectionsMap))\n})\n\n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}