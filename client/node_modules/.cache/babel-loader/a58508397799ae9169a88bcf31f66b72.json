{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { emailSignInFailure, googleSignInStart } from './user.actions';\nimport { gogleSignInSucces, googleSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(gogleSignInSucces({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(gogleSignInSucces({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart)]);\n}","map":{"version":3,"sources":["/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","emailSignInFailure","googleSignInStart","gogleSignInSucces","googleSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,gBAAtD;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,QAAqD,gBAArD;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AACnC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAnB;AACA,UAAMS,OAAO,GAAE,MAAMZ,IAAI,CAACI,yBAAD,EAA2BM,IAA3B,CAAzB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMhB,GAAG,CAACS,iBAAiB,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAlB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACU,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACH;AACA;AAGD,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAI;AACA,UAAM;AAACX,MAAAA;AAAD,QAAO,MAAMR,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAnB;AACA,UAAMT,OAAO,GAAE,MAAMZ,IAAI,CAACI,yBAAD,EAA2BM,IAA3B,CAAzB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMhB,GAAG,CAACS,iBAAiB,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAlB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AAClC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,CAAhB;AACH;AACD,OAAO,UAAUC,SAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACM,iBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\nimport { emailSignInFailure, googleSignInStart } from './user.actions';\nimport {gogleSignInSucces, googleSignInFailure} from './user.actions';\n\nexport function* signInWithGoogle(){\ntry {\n    const {user}=yield auth.signInWithPopup(googleProvider);\n    const userRef= yield call(createUserProfileDocument,user);\n    const userSnapshot=yield userRef.get();\n    yield put(gogleSignInSucces({id: userSnapshot.id, ...userSnapshot.data()}));\n} catch (error) {\n    yield put(googleSignInFailure(error));\n}\n}\n\n\nexport function* signInWithEmail({payload:{email,password}}){\n    try {\n        const {user}=yield auth.signInWithEmailAndPassword(email,password);\n        const userRef= yield call(createUserProfileDocument,user);\n        const userSnapshot=yield userRef.get();\n        yield put(gogleSignInSucces({id: userSnapshot.id, ...userSnapshot.data()}));\n    } catch (error) {\n        yield put(emailSignInFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START)\n}\nexport function* userSagas(){\n    yield all([call(googleSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}