{"ast":null,"code":"var _jsxFileName = \"/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nconst SigIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    } // emailSignInStart(email,password);\n\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target; // this.setState({ [name]: value });\n\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \" \", \"sign in with Google\", \" \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SigIn);","map":{"version":3,"sources":["/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","auth","signInWithGoogle","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","SigIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AACA,SAAQC,eAAR,EAAwBC,WAAxB,EAAoCC,mBAApC,QAA8D,kBAA9D;AAEA,SAAQC,iBAAR,QAAgC,+BAAhC;;AAEA,MAAMC,KAAK,GAAE,MAAK;AAEjB,QAAM,CAACC,eAAD,EAAiBC,cAAjB,IAAiCZ,QAAQ,CAAC;AAACa,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAA/C;AACA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEC,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACF,YAAMb,IAAI,CAACc,0BAAL,CAAgCL,KAAhC,EAAuCC,QAAvC,CAAN;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAd;AACD,KAHD,CAGE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARmC,CASpC;;AACD,GAVD;;AAYA,QAAMG,YAAY,GAAIP,KAAD,IAAW;AAC9B,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBT,KAAK,CAACU,MAA9B,CAD8B,CAE9B;;AACAd,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAoB,OAACc,IAAD,GAAOD;AAA3B,KAAD,CAAd;AACD,GAJD;;AAME,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,eAGE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,YAAY,EAAEU,YAJhB;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAET,QAHT;AAIE,IAAA,YAAY,EAAES,YAJhB;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAElB,gBAAvB;AAAyC,IAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,yBAEsB,GAFtB,CAFA,CAjBF,CAHF,CADF;AA+BD,CAtDH;;AAyDE,MAAMsB,kBAAkB,GAACC,QAAQ,KAAG;AAClCnB,EAAAA,iBAAiB,EAAC,MAAImB,QAAQ,CAACnB,iBAAiB,EAAlB;AADI,CAAH,CAAjC;;AAGF,eAAeR,OAAO,CAAC,IAAD,EAAM0B,kBAAN,CAAP,CAAiCjB,KAAjC,CAAf","sourcesContent":["import React, { Component,useState } from \"react\";\nimport {connect} from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\nimport {SignInContainer,SignInTitle,ButtonsBarContainer} from './sign-in.styles'\n\nimport {googleSignInStart} from '../../redux/user/user.actions';\n\nconst SigIn =()=> {\n\n const [userCredentials,setCredentials]=useState({email:'',password:''})\n const { email, password } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({ email: \"\", password: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n    // emailSignInStart(email,password);\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    // this.setState({ [name]: value });\n    setCredentials({...userCredentials,[name]:value});\n  };\n \n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            handleChange={handleChange}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            handleChange={handleChange}\n            label=\"password\"\n            required\n          />\n          <ButtonsBarContainer>\n          <CustomButton type=\"submit\">sign in</CustomButton>\n          <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n            {\" \"}\n            sign in with Google{\" \"}\n          </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n\n\n  const mapDispatchToProps=dispatch=>({\n    googleSignInStart:()=>dispatch(googleSignInStart())\n  })\nexport default connect(null,mapDispatchToProps)(SigIn);\n"]},"metadata":{},"sourceType":"module"}