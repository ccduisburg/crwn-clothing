{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am console');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef\n  // .get()\n  // .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   this.setState({loading: false})\n  //   }).catch(error=>dispatch(fetchCollectionsFailure(error.message)))\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/cc/Schreibtisch/tutorial/projekt/crw-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,QAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AACK,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAC,MAAMF,aAAa,CAACG,GAAd,EAArB;AAEA,QAAMC,cAAc,GAAE,MAAMb,IAAI,CAACG,+BAAD,EAAiCQ,QAAjC,CAAhC,CALgC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAGL,OAAO,UAAUG,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CAACE,eAAe,CAACc,uBAAjB,EAAyCT,qBAAzC,CAAf;AACH","sourcesContent":["import {takeEvery,call} from 'redux-saga/effects'\nimport ShopActionTypes from './shop.types';\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.actions';\n\n\nexport function* fetchCollectionsAsync(){\n   yield console.log('I am console');\n        const collectionRef = firestore.collection('collections');\n        const snapshot=yield collectionRef.get();\n\n        const collectionsMap= yield call(convertCollectionsSnapshotToMap,snapshot);\n\n        // collectionRef\n        // .get()\n        // .then(snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        //     dispatch(fetchCollectionsSuccess(collectionsMap));\n        //   this.setState({loading: false})\n        //   }).catch(error=>dispatch(fetchCollectionsFailure(error.message)))\n    }\n\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);\n}"]},"metadata":{},"sourceType":"module"}